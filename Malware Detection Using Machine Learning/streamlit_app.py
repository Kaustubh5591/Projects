
import streamlit as st
import joblib
import os
from file_checker import checkFile



def sanitization(web):
    web = web.lower()
    token = []
    dot_token_slash = []
    raw_slash = str(web).split('/')
    for i in raw_slash:
        raw1 = str(i).split('-')
        slash_token = []
        for j in range(0,len(raw1)):
            raw2 = str(raw1[j]).split('.')
            slash_token = slash_token + raw2
        dot_token_slash = dot_token_slash + raw1 + slash_token
    token = list(set(dot_token_slash)) 
    if 'com' in token:
        token.remove('com')
    return token


def check_url(url, lgr, vectorizer):
    # Using whitelist filter
    whitelist = ['hackthebox.eu','root-me.org','gmail.com']
    s_url = [url] if url not in whitelist else []

    # Predicting
    x = vectorizer.transform(s_url)
    y_predict = lgr.predict(x)

    return y_predict[0] if len(y_predict) > 0 else None



st.title("Malware Detection")
st.text("")

st.subheader("For PE Files")

file = st.file_uploader("Upload a file to check for malwares:")
if file is not None:
    with st.spinner("Checking..."):
        open('tempFile', 'wb').write(file.getvalue())
        file.close()  
        legitimate = checkFile("tempFile")
       
        if legitimate:
            st.success(f"File {file.name} seems *LEGITIMATE*!")
        else:
            st.error(f"File {file.name} is probably a **MALWARE**!")

st.text("")
st.text("")


# Page title
st.subheader("URL Malware Detection")

# User input for URL
url_input = st.text_input('Enter URL:', '')


# Check button
if st.button('Check'):
    if url_input.strip() == '':
        st.error('Please enter a URL.')
    else:
        # Load model and vectorizer
        lgr = joblib.load('model/classifier.joblib')
        vectorizer = joblib.load('model/vectorizer.joblib')
        # Perform URL check
        prediction = check_url(url_input, lgr, vectorizer)
        # Display result
        if prediction is not None:
            if prediction == 'good':
                st.success(f'The entered domain "{url_input}" is predicted as legitimate.')
            else:
                st.error(f'The entered domain "{url_input}" is predicted as malicious.')
        else:
            st.error('Error occurred during URL checking. Please try again later.')








